# vim: syntax=pf

tunnel_server=8.8.8.8
tunnel_port=1984

set skip on lo0
set optimization high-latency

block log
block inet6

altq on wlan priq bandwidth 1Mb qlimit 1500 queue { std, std_ssh, std_ack }
queue std priq(default)
queue std_ssh priority 4 priq(red)
queue std_ack priority 6

# ignore dhcp, netbios, itunes blabber
block in quick on wlan inet proto udp \
	from 0.0.0.0 port bootpc \
	to 255.255.255.255 port bootps
block in quick on wlan inet proto udp \
	from any port { netbios-ns, netbios-dgm } \
	to any port { netbios-ns, netbios-dgm }
block in quick on wlan inet proto udp \
	from any port 5353 to any port 5353

# ssh bypasses tunnel
pass out log on wlan inet proto tcp \
	from wlan to $tunnel_server port $tunnel_port \
	keep state \
	queue(std_ssh, std_ack)

# allow lan to connect to ssh on our IP.
pass in quick log on lan inet proto tcp \
	from any to lan port ssh keep state

pass in on vr0 from lan:network to any

# NAT lan traffic via tunnel interface.
pass out quick on tun inet \
	from lan:network to any \
	nat-to tun keep state \
	queue(vpn, vpn_ack)

# accept dhcp requests on internal lan
pass in on lan inet proto udp \
	from any port bootpc \
	to any port bootpc \
	keep state

# pass out all egress(tunnel) traffic.
pass out on tun from tun to any \
	queue(vpn, vpn_ack)
